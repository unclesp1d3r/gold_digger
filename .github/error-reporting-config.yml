# Enhanced Error Reporting Configuration
# This file defines error categories, troubleshooting guides, and remediation steps

error_categories:
  build:
    description: "Compilation errors, dependency issues, platform-specific build problems"
    common_causes:
      - "Rust compilation errors (syntax, type errors)"
      - "Missing dependencies or feature conflicts"
      - "Platform-specific build issues (OpenSSL, linking)"
      - "Cargo.toml configuration problems"
      - "Cross-compilation issues"
    quick_fixes:
      - "cargo clean && cargo build --release"
      - "just validate-deps  # Check TLS dependencies"
      - "just build-all      # Test all feature combinations"
      - "cargo update        # Update dependencies"
    troubleshooting_guide: "docs/src/troubleshooting/build-failures.md"

  test:
    description: "Unit test failures, integration test issues, test environment problems"
    common_causes:
      - "Test logic errors or assertion failures"
      - "Database connection issues in tests"
      - "Platform-specific test behavior differences"
      - "Test environment setup problems"
      - "Missing test dependencies"
    quick_fixes:
      - "cargo test -- --nocapture  # Show test output"
      - "just test-nextest          # Use nextest for better reporting"
      - "RUST_BACKTRACE=1 cargo test  # Get full stack traces"
      - "just ci-check              # Reproduce CI environment"
    troubleshooting_guide: "docs/src/troubleshooting/test-failures.md"

  security:
    description: "Security vulnerabilities, license compliance, audit failures"
    common_causes:
      - "High/critical vulnerabilities in dependencies"
      - "License compliance violations"
      - "Security policy violations (cargo-deny)"
      - "SARIF upload or CodeQL analysis issues"
      - "Outdated security advisories"
    quick_fixes:
      - "cargo update                    # Update to latest patch versions"
      - "just audit                      # Run cargo-audit for advisories"
      - "cargo tree | grep <vuln-crate>  # Find dependency path"
      - "just security                   # Run comprehensive security scan"
    troubleshooting_guide: "docs/src/troubleshooting/ci-failures.md#security-failures"

  format:
    description: "Code formatting violations, linting warnings, style issues"
    common_causes:
      - "Code not formatted with rustfmt"
      - "Clippy warnings (zero-tolerance policy)"
      - "Pre-commit hook violations"
      - "Import organization or style issues"
      - "Line length or indentation problems"
    quick_fixes:
      - "just format        # Auto-format code"
      - "just fix           # Auto-fix clippy issues"
      - "just fmt-check     # Verify formatting"
      - "just lint          # Check for remaining issues"
    troubleshooting_guide: "docs/src/troubleshooting/format-failures.md"

  dependency:
    description: "Dependency conflicts, version issues, feature flag problems"
    common_causes:
      - "Conflicting dependency versions"
      - "Feature flag conflicts (TLS backends)"
      - "Missing optional dependencies"
      - "Platform-specific dependency issues"
      - "Cargo.lock inconsistencies"
    quick_fixes:
      - "just validate-deps  # Check TLS dependency conflicts"
      - "cargo tree          # Inspect dependency tree"
      - "cargo update        # Update to compatible versions"
      - "just build-all      # Test all feature combinations"
    troubleshooting_guide: "docs/src/troubleshooting/ci-failures.md#dependency-failures"

# Debug artifact collection configuration
debug_artifacts:
  system_info:
    - "System information (OS, architecture, environment)"
    - "Disk space and memory usage"
    - "Process list and resource usage"
    - "Environment variables (non-sensitive)"

  rust_environment:
    - "Rust toolchain version and components"
    - "Cargo configuration and manifest files"
    - "Dependency tree and feature flags"
    - "Build target information"

  build_artifacts:
    - "Build logs and error messages"
    - "Compiled binaries and libraries"
    - "Build cache and intermediate files"
    - "Compilation flags and options"

  test_results:
    - "Test execution logs and results"
    - "Coverage reports and metrics"
    - "Test binary information"
    - "Test environment configuration"

  security_scans:
    - "SBOM files and vulnerability reports"
    - "SARIF files and security scan results"
    - "Audit logs and advisory information"
    - "License compliance reports"

# Troubleshooting guide links
guides:
  main: "docs/src/troubleshooting/ci-failures.md"
  build: "docs/src/troubleshooting/build-failures.md"
  test: "docs/src/troubleshooting/test-failures.md"
  security: "docs/src/troubleshooting/security-failures.md"
  format: "docs/src/troubleshooting/format-failures.md"
  dependency: "docs/src/troubleshooting/dependency-failures.md"

# Quick reference commands
quick_commands:
  development:
    - "just setup          # Set up development environment"
    - "just ci-check       # Run all CI checks locally"
    - "just help           # Show all available commands"

  debugging:
    - "just validate-deps  # Check dependency conflicts"
    - "just features       # Show feature combinations"
    - "just status         # Show project status"

  local_ci:
    - "just act-setup      # Set up GitHub Actions simulation"
    - "just act-ci-dry     # Simulate CI workflow"
    - "just act-clean      # Clean up act artifacts"

  quality_gates:
    - "just format         # Auto-format code"
    - "just lint           # Run clippy linting"
    - "just test-nextest   # Run tests with nextest"
    - "just security       # Run security scans"

# Platform-specific guidance
platform_guidance:
  windows:
    common_issues:
      - "OpenSSL compilation failures"
      - "Visual Studio Build Tools missing"
      - "Path length limitations"
    solutions:
      - "Use standard rustls TLS build"
      - "Install Visual Studio Build Tools"
      - "Use short paths or enable long path support"

  macos:
    common_issues:
      - "Xcode command line tools missing"
      - "Homebrew OpenSSL linking issues"
      - "Apple Silicon compatibility"
    solutions:
      - "Install Xcode command line tools"
      - "Use standard rustls TLS build"
      - "Use universal binaries for compatibility"

  linux:
    common_issues:
      - "Missing development packages"
      - "Distribution-specific library paths"
      - "Cross-compilation setup"
    solutions:
      - "Install build-essential and libssl-dev"
      - "Use pkg-config for library detection"
      - "Set up cross-compilation toolchain"

# CI environment specific guidance
ci_environments:
  github_actions:
    common_issues:
      - "Environment variable access"
      - "Permission and token issues"
      - "Artifact upload/download failures"
    solutions:
      - "Check repository secrets configuration"
      - "Verify workflow permissions"
      - "Use proper artifact actions"

  local_simulation:
    tools:
      - "act: GitHub Actions local runner"
      - "docker: Container-based testing"
      - "just: Task runner for development"
    setup:
      - "just act-setup    # Install and configure act"
      - "just act-ci-dry   # Simulate CI without execution"
      - "just ci-check     # Run CI checks locally"
